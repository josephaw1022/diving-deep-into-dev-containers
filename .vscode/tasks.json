{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Create PostgreSQL Database",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "set -a && source .env && set +a && psql -U \"$DB_USER\" -h db -d postgres -c \"CREATE DATABASE ${input:dbNameToCreate};\""
            ],
            "problemMatcher": [],
            "group": "none",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Remove PostgreSQL Database",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "set -a && source .env && set +a && psql -U \"$DB_USER\" -h db -d postgres -c \"DROP DATABASE IF EXISTS ${input:dbNameToRemove};\""
            ],
            "problemMatcher": [],
            "group": "none",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
        },
        {
            "label": "Backup PostgresSQL Database",
            "type": "shell",
            "command": "./scripts/backup_db.sh",
            "group": "none",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [],
            "runOptions": {
                "runOn": "folderOpen"
            }
        },
        {
            "label": "Create EF Core Migration",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "ef",
                "migrations",
                "add",
                "${input:name}",
                "-c",
                "${input:context}",
                "--startup-project",
                "${input:startupProject}",
                "--project",
                "${input:dbProject}"
            ],
            "problemMatcher": [],
        },
        {
            "label": "Update Database (Apply Migrations)",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "ef",
                "database",
                "update",
                "-c",
                "${input:context}",
                "--startup-project",
                "${input:startupProject}",
                "--project",
                "${input:dbProject}"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        },
        {
            "label": "Install dotnet-ef",
            "type": "shell",
            "command": "dotnet",
            "args": [
                "tool",
                "install",
                "--global",
                "dotnet-ef"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        }
    ],
    "inputs": [
        {
            "id": "name",
            "type": "promptString",
            "description": "Name of the migration:"
        },
        {
            "id": "context",
            "type": "pickString",
            "description": "DbContext:",
            "options": [
                "AuthDatabaseContext"
            ],
            "default": "AuthDatabaseContext"
        },
        {
            "id": "startupProject",
            "type": "pickString",
            "description": "Startup project:",
            "options": [
                "simplewebapi"
            ],
            "default": "simplewebapi"
        },
        {
            "id": "dbProject",
            "type": "pickString",
            "description": "DB project:",
            "options": [
                "auth-db"
            ],
            "default": "auth-db"
        },
        {
            "id": "dbName",
            "type": "promptString",
            "description": "Name of the database to backup:",
            "default": "dev-container-db"
        },
        {
            "id": "dateTime",
            "type": "promptString",
            "description": "Enter the date-time string for the backup filename:",
            "default": "YYYYMMDDHHMM"
        },
        {
            "id": "dbNameToCreate",
            "type": "promptString",
            "description": "Name of the database to create:"
        },
        {
            "id": "dbNameToRemove",
            "type": "promptString",
            "description": "Name of the database to remove:"
        }
    ]
}